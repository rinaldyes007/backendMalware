<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\User;
use App\Transformers\UserTransformer;
use Auth;
use App\Presensi;

class UserController extends Controller
{
     public function users(User $user)
    {
        $users = $user->all();

        return fractal()
         ->collection($users)
         ->transformWith(new UserTransformer)
         ->toArray();
    }

    public function profile(User $user)
    {
        $user = $user->find(Auth::user()->id);

        return fractal()
        ->item($user)
        ->transformWith(new UserTransformer)
        ->includePresensis()
        ->toArray();
    }

    public function profileById(User $user, $id)
    {
        $user = $user->find($id);

        return fractal()
        ->item($user)
        ->transformWith(new UserTransformer)
        ->includePresensis()
        ->toArray();
    }


    public function hitung() 
    {

        $users = User::all();
        $admin = User::where('roles_id', '=', '2')->first();
        $presensi = Presensi::all();
        $hadir = Presensi::where('status', '=', 'hadir')->get();
        $tidakhadir = Presensi::where('status', '=', 'Tidak Hadir')->get();

        // dd($admin);

        return view ('dashboard', compact('users' , 'admin', 'presensi', 'hadir', 'tidakhadir'));

    }

    public function index()
    {
        $users = User::all();
        $nomor = 1;

        return view('usertabel', compact('users', 'nomor'));
    }

    public function edit($id)
    {
        $user = User::find($id);
        // dd($user);
        // $user = User::find($id);
        return view('edituser', compact('user', 'id'));
    }

    public function update(Request $request, $id)
    {
        $this->validate($request, [
            'email' => 'required'
        ]);
        $user = User::find($id);
        $user->nama_pegawai = $request->get('nama_pegawai');
        $user->no_hp = $request->get('no_hp');
        $user->jabatan = $request->get('jabatan');
        $user->email = $request->get('email');
        $user->save();

        return redirect('user');
    }

    public function destroy($id)
    {
        $user = User::find($id);
        $user->delete();

        return redirect('user');
    } 

    public function __construct()
    {
        $this->middleware('auth');
    }
}
